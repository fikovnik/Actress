package cs1
		
import fr.unice.i3s.actress.modeling.fcdl.japi.*
import java.lang.System

active sensor FileTailer {
	out push port lines: String
	port selfport: String

	property file: String

	act activate(selfport;;lines)
}

processor AccessLogParser {
    in push port lines: String
    out push port size: long
	out push port requests: int

	act activate(lines;;requests,size)
}

effector FileWriter {
	in push port value: String

	act activate(value;;)
}

processor Accumulator {
	in push port input: long
	out pull port sum: long

    act onInput(input;;)
	act onSum(sum;;)

	implementation xbase {
		var value: Long = 0L

		act onInput {
		  value = value + input
		}

		act onSum {
		  value
		}
	}
}

active processor PeriodicTrigger<T> {
	push out port output: T
	pull in port input: T
	port selfport: long
	
	provided sensor period: Duration
	provided effector setPeriod: Duration

	property initialPeriod: Duration

	act activate(selfport; input; output?)
	act onSetPeriod(setPeriod;;period?)

    implementation xbase {

	    var currentPeriod = initialPeriod
		var task: Cancellable

		def init {
			reschedule
		}

		def destroy {
			task.cancel
		}

		act activate {
		  log.info("Activate at "+selfport)

		  switch data : input.get {
            case data.present : output.put(data.get)   		  
          }
		}

		act onSetPeriod {
		  	if (setPeriod != currentPeriod) {  		
		  	  currentPeriod = setPeriod
		  	  reschedule()
		  	  period.put(currentPeriod)
		  	}    
		}

		def reschedule {
			task = context.scheduler.schedule(2.seconds, currentPeriod) [|
				selfport.put(0L)//System::currentTimeMillis)
			]
		}
	}
}		